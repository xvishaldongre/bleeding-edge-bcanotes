<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Object Oriented Programming Concepts Using Java on BCA Notes</title>
    <link>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/</link>
    <description>Recent content in Object Oriented Programming Concepts Using Java on BCA Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Made with ‚ù§ by Vishal Dongre</copyright>
    <lastBuildDate>Mon, 19 Oct 2020 16:11:33 +0530</lastBuildDate><atom:link href="https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unit - 1</title>
      <link>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/unit-1/</link>
      <pubDate>Mon, 19 Oct 2020 16:11:33 +0530</pubDate>
      
      <guid>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/unit-1/</guid>
      <description>Introduction to Java  Java is a programming language and a platform. Java is a high level, robust, object-oriented and secure programming language.
Java was developed by Sun Microsystems (which is now the subsidiary of Oracle) in the year 1995. James Gosling is known as the father of Java. Before Java, its name was Oak. Since Oak was already a registered company, so James Gosling and his team changed the Oak name to Java.</description>
    </item>
    
    <item>
      <title>Unit - 2</title>
      <link>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/unit-2/</link>
      <pubDate>Mon, 19 Oct 2020 16:11:33 +0530</pubDate>
      
      <guid>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/unit-2/</guid>
      <description>Statements  A statement is a single &amp;ldquo;command&amp;rdquo; that is executed by the Java interpreter. By default, the Java interpreter runs one statement after another, in the order they are written. Many of the statements defined by Java, however, are flow-control statements, such as conditionals and loops, that alter this default order of execution in well-defined ways.
   Statement Purpose Syntax     expression side effects var=expr;expr++;method();newType();   compound group statements { statements }   empty do nothing ;   labeled name a statement label : statement   variable declare a variable [final] type name [= value] [, name [= value]] &amp;hellip;;   if conditional if ( expr ) statement [ else statement]   switch conditional switch (expr) { [ case_expr_:_statements_ ] &amp;hellip; [ default:_statements_ ] }   while loop while ( expr ) statement   do loop do statement while ( expr );   for simplified loop for ( init ; test ; increment ) statement   break exit block break [ label ] ;   continue restart loop continue [ label ] ;   return end method return [ expr ] ;   synchronized critical section synchronized ( expr ) { statements }   throw throw exception throw expr ;   try handle exception try {statements} [ catch (type__name) {statements} ] &amp;hellip; [ finally {statements} ]    &amp;ndash; https://docstore.</description>
    </item>
    
    <item>
      <title>Unit - 3</title>
      <link>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/unit-3/</link>
      <pubDate>Mon, 19 Oct 2020 16:11:33 +0530</pubDate>
      
      <guid>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/unit-3/</guid>
      <description>Definitions and naming conventions for the members of the JAVA classes  A java program may contain many classes of which only one class will have a main method. Class will contain data members and methods that operate on the data members of the class. To write a Java program, we first need to define classes and then put them together. Generally a standard java program consists of following blocks as shown in below figure.</description>
    </item>
    
    <item>
      <title>Unit - 4</title>
      <link>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/unit-4/</link>
      <pubDate>Mon, 19 Oct 2020 16:11:33 +0530</pubDate>
      
      <guid>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/unit-4/</guid>
      <description> Inheritance  Super class  Sub class  Method overloading  interface  thread  Multithreading example  synchronized  Exception (try-catch-final blocks examples)  examples and exercises </description>
    </item>
    
    <item>
      <title>Unit - 5</title>
      <link>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/unit-5/</link>
      <pubDate>Mon, 19 Oct 2020 16:11:33 +0530</pubDate>
      
      <guid>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/unit-5/</guid>
      <description> Java Virtual machine concept  Java Platform overview  programming Examples to clarify use of object  threads  exceptions and packages for I/O  file and string handling  examples and exercises </description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/resources/</link>
      <pubDate>Mon, 19 Oct 2020 16:11:33 +0530</pubDate>
      
      <guid>https://601a5ef96a29efb2a3d0bfe2--laughing-shirley-c9d584.netlify.app/object-oriented-programming-concepts-using-java/resources/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
